/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JDialog.java to edit this template
 */
package vista;

import controlador.DAO.Pozo.PozoDao;
import controlador.TDA.grafos.PaintGraph;
import controlador.TDA.listas.DynamicList;
import controlador.Utiles.Utiles;
import vista.tablas.ModeloTablaFloyd;
import vista.util.UtilVistaPozo;

import java.util.Random;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;

/**
 *
 * @author romer
 */
public class FrmGrafoPozo extends javax.swing.JDialog {
    
    private PozoDao pd = new PozoDao();
    
    
    /**
     * Creates new form FrmGrafoPozo
     */
    public FrmGrafoPozo(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
    }
    
    public void mostrarGrafo() throws Exception {
        PaintGraph p = new PaintGraph();
        p.updateFileLabel(pd.getGrafo());
        Utiles.abrirArchivoHTML("C:/Users/romer/Documents/NetBeansProjects/Pozos _luz/d3/grafo.html");
    }
    
    public void mostrarMapa() throws Exception {
        UtilVistaPozo.crearMapaEscuela(pd.getGrafo());
        Runtime rt = Runtime.getRuntime();
        Utiles.abrirArchivoHTML("C:/Users/romer/Documents/NetBeansProjects/Pozos _luz/mapas/index.html");
    }
    
    public void insertarAdyacenciasAleatorias () throws Exception {
        try {
            Random r = new Random();
            int v1 = r.nextInt(pd.getPozoList().getLenght());
            int v2 = r.nextInt(pd.getPozoList().getLenght());

            while (v1 == v2) {
                v2 = r.nextInt(pd.getPozoList().getLenght());
            }

            Double distancia = UtilVistaPozo.calcularDistanciaPozo(pd.getPozoList().getInfo(v1), pd.getPozoList().getInfo(v2));
            distancia = Utiles.redondear(distancia);

            pd.getGrafo().insertEdge(pd.getPozoList().getInfo(v1), pd.getPozoList().getInfo(v2), distancia); 
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Adyacencia aleatoria insertada entre los vértices ");
        }
        System.out.println(pd.getGrafo().toString());
    }

    public void insertarAdyacencias() throws Exception {
        Random random = new Random();
        int maxAdyacencias = 2;

        for (int i = 0; i < pd.getPozoList().getLenght(); i++) {
            int numAdyacencias = random.nextInt(maxAdyacencias - 1) + 2;

            DynamicList<Integer> disponibles = new DynamicList<>();
            for (int j = i + 1; j < pd.getPozoList().getLenght(); j++) {
                disponibles.add(j);
            }

            // Conectar el nodo actual con nodos aleatorios
            for (int k = 0; k < numAdyacencias; k++) {
                // Si ya no hay nodos disponibles para conectar, salir del bucle
                if (disponibles.isEmpty()) {
                    break;
                }

                // Seleccionar un índice aleatorio de los nodos disponibles
                int indiceAleatorio = random.nextInt(disponibles.getLenght());
                int indiceNodo = disponibles.getInfo(indiceAleatorio);

                // Conectar el nodo actual con el nodo seleccionado
                Double distancia = UtilVistaPozo.calcularDistanciaPozo(pd.getPozoList().getInfo(i), pd.getPozoList().getInfo(indiceNodo));
                distancia = Utiles.redondear(distancia);
                pd.getGrafo().insertEdge(pd.getPozoList().getInfo(i), pd.getPozoList().getInfo(indiceNodo), distancia);
                disponibles.remove(indiceAleatorio);
            }
        }
    }



        /*Double distancia = UtilVistaPozo.calcularDistanciaPozo(pd.getPozoList().getInfo(v1), pd.getPozoList().getInfo(v2));
            distancia = Utiles.redondear(distancia);

            pd.getGrafo().insertEdge(pd.getPozoList().getInfo(v1), pd.getPozoList().getInfo(v2), distancia);
            JOptionPane.showMessageDialog(null, "Adyacencia aleatoria insertada entre los vértices " + v1 + " y " + v2);*/
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        buttonAero1 = new org.edisoncor.gui.button.ButtonAero();
        jScrollPane1 = new javax.swing.JScrollPane();
        tbPozo = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jButton1.setText("Mostrar grafo");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("Mostrar mapa");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        buttonAero1.setText("Conectar grafo");
        buttonAero1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonAero1ActionPerformed(evt);
            }
        });

        tbPozo.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(tbPozo);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(68, 68, 68)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(buttonAero1, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(36, 36, 36))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jButton2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton1)
                        .addContainerGap(523, Short.MAX_VALUE))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(107, 107, 107)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1)
                    .addComponent(jButton2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 11, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(buttonAero1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(64, 64, 64))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(20, 20, 20))))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        try {
            mostrarGrafo();
        } catch (Exception ex) {
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        try {
            mostrarMapa();
        } catch (Exception ex) {
        }
    }//GEN-LAST:event_jButton2ActionPerformed
    
    private void buttonAero1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonAero1ActionPerformed
        try {
            insertarAdyacencias();
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(null, "Error: ");
        }
    }//GEN-LAST:event_buttonAero1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FrmGrafoPozo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FrmGrafoPozo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FrmGrafoPozo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FrmGrafoPozo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                FrmGrafoPozo dialog = new FrmGrafoPozo(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private org.edisoncor.gui.button.ButtonAero buttonAero1;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tbPozo;
    // End of variables declaration//GEN-END:variables
}
